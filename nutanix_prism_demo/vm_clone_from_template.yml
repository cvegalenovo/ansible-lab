---
- name: Clone VM from Nutanix Template
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create template query JSON file
      ansible.builtin.template:
        src: templates/get_template.json.j2
        dest: get_template.json

    - name: Retrieve Information of Template VM
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/vms/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: "{{ lookup('file','get_template.json') }}"
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: template_vm
      
    - name: Debug: Show raw output of template_vm
      debug:
        var: template_vm.json


    - name: Create subnet query JSON file
      ansible.builtin.template:
        src: templates/get_subnet.json.j2
        dest: get_subnet.json

    - name: Retrieve Subnet Info
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/subnets/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: "{{ lookup('file','get_subnet.json') }}"
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: vm_subnet

    - name: Create cluster query JSON file
      ansible.builtin.template:
        src: templates/get_cluster.json.j2
        dest: get_cluster.json

    - name: Retrieve Cluster Info
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/clusters/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: "{{ lookup('file','get_cluster.json') }}"
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: cluster_info

    - name: Create clone request JSON
      ansible.builtin.template:
        src: templates/clone_vm.json.j2
        dest: clone_vm.json

    - name: Clone VM from Template
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/vms/clones"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: "{{ lookup('file','clone_vm.json') }}"
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        status_code: 202
        return_content: true
      register: vm_clone_result

    - name: Get VM Attributes (wait for IP)
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/vms/{{ vm_clone_result.json.metadata.uuid }}"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: application/json
        return_content: true
      register: get_vm_attributes
      retries: 10
      delay: 60
      until: get_vm_attributes.json.status.resources.nic_list[0].ip_endpoint_list[0].ip is defined

    - name: Save VM IP
      ansible.builtin.set_stats:
        data:
          vm_ip: "{{ get_vm_attributes.json.status.resources.nic_list[0].ip_endpoint_list[0].ip }}"
